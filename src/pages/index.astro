---
import Layout from "@layouts/layout.astro";

const projects = [
    {
        title: "year of code",
        description: "Literally this website",
    },
    {
        title: "cave",
        description: "Funky,  game.",
    },
    {
        title: "untitled website",
        description: "The homepage of the Obeya",
    },
    {
        title: "year of code",
        description: "Literally this website",
    },
    {
        title: "cave",
        description: "Funky,  game.",
    },
    {
        title: "untitled website",
        description: "The homepage of the Obeya",
    },
    {
        title: "year of code",
        description: "Literally this website",
    },
    {
        title: "cave",
        description: "Funky,  game.",
    },
    {
        title: "untitled website",
        description: "The homepage of the Obeya",
    },
];
---

<Layout>
    <p
        class="dark:text-white text-black ml-[calc(10vw)] leading-7 text-sm uppercase tracking-[0.4em] mb-2 font-bold"
    >
        projects
    </p>
    <ul
        id="screenshaker"
        class="dark:text-white text-black select-none grid grid-flow-row"
    >
        {
            projects.map((project, idx) => (
                <>
                    <hr class="dark:bg-gray-500 bg-gray-800" />
                    <li
                        id="project"
                        class="py-6 relative text-4xl font-extrabold tracking-tight lg:text-6xl uppercase"
                    >
                        <div
                            class="z-30 absolute top-0 left-0 origin-center h-full"
                            id="blaster"
                        >
                            <img
                                class="max-h-full h-auto object-contain aspect-auto"
                                src="gaster_blaster.png"
                            />
                        </div>
                        <div
                            id="anime"
                            class="dark:text-black text-white flex items-center justify-start z-20 w-full top-0 left-0 origin-center absolute dark:bg-white bg-black overflow-hidden"
                        >
                            <div class="px-4 py-2 grid grid-cols-10 items-center w-full">
                                <h1 class="opacity-10 col-start-1 col-end-2 justify-self-end mr-10">
                                    {idx + 1}
                                </h1>
                                <h1 class="col-start-2 col-end-7">
                                    {project.title}
                                </h1>
                                <h3 class="scroll-m-20 text-2xl font-semibold tracking-tight col-start-7 col-end-10">
                                    {project.description}
                                </h3>
                            </div>
                        </div>

                        <div class="absolute top-0 left-0 w-full h-full px-4 py-2 grid grid-cols-10 items-center">
                            <h1 class="opacity-10 col-start-1 col-end-2 justify-self-end mr-10">
                                {idx + 1}
                            </h1>
                        </div>

                        <div class="px-4 py-2 grid grid-cols-10 items-center">
                            <h1 class="col-start-2 col-end-7">
                                {project.title}
                            </h1>
                        </div>
                    </li>
                </>
            ))
        }
    </ul>
</Layout>

<style>
    @keyframes gaster_blaster_enter {
        0% {
            transform: translateX(-80%) scale(1.25) translateY(6.25%);
        }
        100% {
            transform: translateX(-25%) scale(1.25) translateY(6.25%);
        }
    }

    @keyframes gaster_blaster_exit {
        0% {
            transform: translateX(-25%) scale(1.25) translateY(6.25%);
        }
        100% {
            transform: translateX(-150%) scale(1.25) translateY(6.25%);
        }
    }

    @keyframes gaster_blaster_shot_enter {
        0% {
            top: 50%;
            height: 10%;
            transform: translateY(-50%) translateX(-100%);
            opacity: 1;
        }
        75% {
            top: 50%;
            transform: translateY(-50%) translateX(0%);
        }
        100% {
            top: 50%;
            height: 100%;
            transform: translateY(-50%) translateX(0%);
            opacity: 1;
        }
    }

    @keyframes gaster_blaster_shot_exit {
        0% {
            top: 50%;
            height: 100%;
            transform: translateY(-50%) translateX(0%);
            opacity: 1;
        }
        100% {
            top: 50%;
            height: 10%;
            transform: translateY(-50%);
            opacity: 0;
        }
    }

    .gaster_blaster_enter {
        animation: gaster_blaster_enter 0.15s ease-in-out forwards;
    }

    .gaster_blaster_exit {
        animation: gaster_blaster_exit 0.25s ease-in-out forwards;
    }

    .gaster_blaster_shot_enter {
        animation: gaster_blaster_shot_enter 0.2s ease-in-out forwards;
    }

    .gaster_blaster_shot_exit {
        animation: gaster_blaster_shot_exit 0.3s ease-in-out forwards;
    }
</style>

<script>
    const cameraShake = (length: number, strength: number, time: number) => {
        const body: HTMLElement = document.querySelector("#screenshaker")!;

        let shouldRun = true;
        body.classList.add(
            ..."transition-all ease-in-out duration-75".split(" "),
        );
        setTimeout(() => {
            shouldRun = false;
            body.style.transform = "translateX(0%) translateY(0%)";
        }, length * 1000);
        let intervalId = setInterval(() => {
            if (!shouldRun) clearInterval(intervalId);

            const trX = (Math.random() - 0.5) * 2 * strength;
            const trY = (Math.random() - 0.5) * 2 * strength;
            body.style.transform = `translateX(${trX}px) translateY(${trY}px)`;
        }, time * 1000);
    };

    let selectionCount = 0;

    function handleElement(element: Element, select: boolean) {
        let bg: HTMLElement = element.querySelector("#anime")!;
        const blaster: HTMLElement = element.querySelector("#blaster")!;
        if (select) {
            selectionCount += 1;
            blaster.classList.remove("gaster_blaster_exit");
            blaster.classList.remove("gaster_blaster_enter");
            void blaster.offsetWidth;
            blaster.classList.add("gaster_blaster_enter");

            bg.classList.remove("gaster_blaster_shot_exit");
            bg.classList.remove("gaster_blaster_shot_enter");
            void bg.offsetWidth;
            bg.classList.add("gaster_blaster_shot_enter");
            cameraShake(0.2, 10, 0.05);
        } else {
            selectionCount -= 1;
            blaster.classList.remove("gaster_blaster_enter");
            blaster.classList.add("gaster_blaster_exit");

            bg.classList.remove("gaster_blaster_shot_enter");
            bg.classList.add("gaster_blaster_shot_exit");
        }
    }

    let projects = document.querySelectorAll("#project");
    for (let project of projects) {
        handleElement(project, false);
        project.addEventListener("mouseenter", (_) =>
            handleElement(project, true),
        );
        project.addEventListener("mouseleave", (_) =>
            handleElement(project, false),
        );
    }
</script>
