---
import Layout from "@layouts/layout.astro";
import Project from "@components/project.astro";
import projects from "@data/projects.ts";
---

<Layout>
    <p
        class="dark:text-white text-black ml-[calc(10vw)] leading-7 text-sm uppercase tracking-[0.4em] mb-2 font-bold"
    >
        projects
    </p>
    <ul
        id="screenshaker"
        class="dark:text-white text-black select-none grid grid-flow-row"
    >
        {
            projects.map((project, idx) => (
                <>
                    <li>
                        <hr class="dark:bg-gray-500 bg-gray-800" />
                    </li>
                    <Project idx={idx} project={project} />
                </>
            ))
        }
    </ul>
</Layout>

<style is:global>
    @keyframes gaster_blaster_enter {
        0% {
            transform: translateX(-80%) scale(1.25) translateY(6.25%);
        }
        100% {
            transform: translateX(-25%) scale(1.25) translateY(6.25%);
        }
    }

    @keyframes gaster_blaster_exit {
        0% {
            transform: translateX(-25%) scale(1.25) translateY(6.25%);
        }
        100% {
            transform: translateX(-150%) scale(1.25) translateY(6.25%);
        }
    }

    @keyframes gaster_blaster_shot_enter {
        0% {
            top: 50%;
            height: 10%;
            transform: translateY(-50%) translateX(-100%);
            opacity: 1;
        }
        75% {
            top: 50%;
            transform: translateY(-50%) translateX(0%);
        }
        100% {
            top: 50%;
            height: 100%;
            transform: translateY(-50%) translateX(0%);
            opacity: 1;
        }
    }

    @keyframes gaster_blaster_shot_exit {
        0% {
            top: 50%;
            height: 100%;
            transform: translateY(-50%) translateX(0%);
            opacity: 1;
        }
        100% {
            top: 50%;
            height: 10%;
            transform: translateY(-50%);
            opacity: 0;
        }
    }

    .gaster_blaster_enter {
        animation: gaster_blaster_enter 0.15s ease-in-out forwards;
    }

    .gaster_blaster_exit {
        animation: gaster_blaster_exit 0.25s ease-in-out forwards;
    }

    .gaster_blaster_shot_enter {
        animation: gaster_blaster_shot_enter 0.2s ease-in-out forwards;
    }

    .gaster_blaster_shot_exit {
        animation: gaster_blaster_shot_exit 0.3s ease-in-out forwards;
    }
</style>

<script>
    const cameraShake = (length: number, strength: number, time: number) => {
        const body: HTMLElement = document.querySelector("#screenshaker")!;

        let shouldRun = true;
        body.classList.add(
            ..."transition-all ease-in-out duration-75".split(" "),
        );
        setTimeout(() => {
            shouldRun = false;
            body.style.transform = "translateX(0%) translateY(0%)";
        }, length * 1000);
        let intervalId = setInterval(() => {
            if (!shouldRun) clearInterval(intervalId);

            const trX = (Math.random() - 0.5) * 2 * strength;
            const trY = (Math.random() - 0.5) * 2 * strength;
            body.style.transform = `translateX(${trX}px) translateY(${trY}px)`;
        }, time * 1000);
    };

    let selectionCount = 0;

    function handleElement(element: Element, select: boolean) {
        let bg: HTMLElement = element.querySelector("#anime")!;
        const blaster: HTMLElement = element.querySelector("#blaster")!;

        if (select) {
            selectionCount += 1;
            blaster.classList.remove("gaster_blaster_exit");
            blaster.classList.remove("gaster_blaster_enter");
            void blaster.offsetWidth;
            blaster.classList.add("gaster_blaster_enter");

            bg.classList.remove("gaster_blaster_shot_exit");
            bg.classList.remove("gaster_blaster_shot_enter");
            void bg.offsetWidth;
            bg.classList.add("gaster_blaster_shot_enter");
            cameraShake(0.2, 10, 0.05);
        } else {
            selectionCount -= 1;
            blaster.classList.remove("gaster_blaster_enter");
            blaster.classList.add("gaster_blaster_exit");

            bg.classList.remove("gaster_blaster_shot_enter");
            bg.classList.add("gaster_blaster_shot_exit");
        }
    }

    let projects = document.querySelectorAll("#project");
    console.log(projects);
    for (let project of projects) {
        handleElement(project, false);
        project.addEventListener("mouseenter", (_) => {
            handleElement(project, true);
        });
        project.addEventListener("mouseleave", (_) =>
            handleElement(project, false),
        );
    }
</script>

<script>
    console.log("ASDASDASD");
</script>
