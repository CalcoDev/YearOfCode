---
import Layout from "@layouts/layout.astro";

const projects = [
    {
        title: "year of code",
        description: "Literally this website",
    },
    {
        title: "cave",
        description: "Funky,  game.",
    },
    {
        title: "untitled website",
        description: "The homepage of the Obeya",
    },
];
---

<Layout>
    <div class="absolute top-0 left-0 w-full h-full -z-10 bg-black"></div>
    <p class="text-white ml-[calc(10vw)]">projects</p>
    <ul class="text-white select-none grid grid-flow-row">
        {
            projects.map((project) => (
                <>
                    <hr class="" />
                    <li
                        id="project"
                        class="py-6 relative text-4xl font-extrabold tracking-tight lg:text-6xl uppercase"
                    >
                        <div
                            id="anime"
                            class="flex items-center justify-start z-20 w-full top-[50%] absolute h-0 bg-white transition-all duration-300 ease-in-out overflow-hidden"
                        >
                            <div class="px-4 py-2 grid grid-cols-10 items-center w-full">
                                <h1 class="text-black col-start-2 col-end-7">
                                    {project.title}
                                </h1>
                                <h3 class="text-black scroll-m-20 text-2xl font-semibold tracking-tight col-start-7 col-end-10">
                                    {project.description}
                                </h3>
                            </div>
                        </div>

                        <div class="px-4 py-2 grid grid-cols-10 items-center">
                            <h1 class="col-start-2 col-end-7">
                                {project.title}
                            </h1>
                        </div>
                    </li>
                </>
            ))
        }
    </ul>
    <img
        class="z-20 absolute left-0 origin-center -translate-y-1/2 scale-150 ease-in-out transition-all duration-75"
        id="blaster"
        src="gaster_blaster.png"
    />
</Layout>

<style>
    @keyframes gaster_blaster {
        0% {
            transform: translateX(-80%) translateY(-50%) scale(1.5);
        }
        100% {
            transform: translateX(-25%) translateY(-50%) scale(1.25);
        }
    }

    .gaster_blaster_anim {
        animation: gaster_blaster 0.2s ease-in-out forwards;
    }
</style>

<script>
    let selectionCount = 0;
    let blaster: HTMLElement = document.querySelector("#blaster")!;

    function handleElement(element: Element, select: boolean) {
        let bg = element.querySelector("#anime")!;
        const bgSelected = "h-full top-0".split(" ");
        const bgDeselected = "h-0 top-[50%]".split(" ");
        if (select) {
            selectionCount += 1;
            bg.classList.add(...bgSelected);
            bg.classList.remove(...bgDeselected);
            blaster.classList.remove("gaster_blaster_anim");
            void blaster.offsetWidth;
            blaster.classList.add("gaster_blaster_anim");
        } else {
            selectionCount -= 1;
            bg.classList.remove(...bgSelected);
            bg.classList.add(...bgDeselected);
            blaster.classList.remove("gaster_blaster_anim");
        }

        blaster.style.display = selectionCount === 0 ? "none" : "inline";
    }

    let projects = document.querySelectorAll("#project");
    for (let project of projects) {
        project.addEventListener("mouseenter", (_) => {
            handleElement(project, true);
            const rect = project.getBoundingClientRect();
            blaster.style.top = `${rect.y + rect.height / 2}px`;
        });
        project.addEventListener("mouseleave", (_) =>
            handleElement(project, false),
        );
    }
</script>
