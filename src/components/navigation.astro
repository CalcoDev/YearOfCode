---
const links = [
    {
        name: "projects",
        path: "/",
    },
    {
        name: "about",
        path: "/about",
    },
];
---

<nav class="fixed z-40 top-0 sm:top-8 w-screen grid grid-cols-10">
    <ul
        class="sm:rounded-2xl px-8 py-4 col-start-1 col-end-11 sm:col-start-2 sm:col-end-10 dark:bg-white bg-black dark:text-black text-white drop-shadow-2xl grid grid-flow-col auto-cols-fr items-center"
    >
        <li id="links">
            <div
                class="md:hidden transition-all duration-150 ease-in-out hover:scale-125 w-fit hover:cursor-pointer active:scale-95"
            >
                <img
                    class="scale-150 dark:block hidden"
                    src="icons/burger_dark.svg"
                />
                <img
                    class="scale-150 dark:hidden block"
                    src="icons/burger.svg"
                />
            </div>
            <div class="hidden md:flex gap-[3vw]">
                {
                    links.map((link) => (
                        <a class="text-gray-500" href={link.path}>
                            {link.name}
                        </a>
                    ))
                }
            </div>
        </li>
        <li class="md:place-self-center place-self-end text-center">
            <h1 class="scroll-m-20 m-0 text-2xl font-black tracking-tight">
                Year of Code
            </h1>
            <h2 class="leading-7 text-sm -mt-2">by Calcopod</h2>
        </li>
        <li
            class="hidden md:flex place-self-end w-full self-center items-center justify-end gap-x-4"
        >
            <div
                class="rounded-full h-full dark:bg-white dark:hover:bg-black
                bg-black hover:bg-white
                active:scale-95 hover: transition-all duration-200 ease-in-out
                hover:cursor-pointer"
                id="theme_toggle_div"
            >
                <div class="dark:hidden">
                    <img
                        id="theme_toggle_light"
                        class="scale-150 h-full p-2"
                        src="icons/moon.svg"
                    />
                    <img
                        id="theme_toggle_dark"
                        class="scale-150 h-full p-2"
                        src="icons/moon_dark.svg"
                    />
                </div>
                <div class="hidden dark:block">
                    <img
                        id="theme_toggle_light"
                        class="scale-150 h-full p-2"
                        src="icons/sun.svg"
                    />
                    <img
                        id="theme_toggle_dark"
                        class="scale-150 h-full p-2"
                        src="icons/sun_dark.svg"
                    />
                </div>
            </div>
            <button
                class="px-8 py-4 dark:bg-black bg-white rounded-2xl min-w-24 md:min-w-32 lg:min-w-48 w-[3vw] dark:text-white text-black flex justify-center items-center gap-2"
            >
                <div class="hidden lg:block scale-150">
                    <img
                        class="hidden dark:block"
                        src="icons/github_dark.svg"
                    />
                    <img class="dark:hidden block" src="icons/github.svg" />
                </div>
                <span class="uppercase text-lg font-bold tracking-tight"
                    >github</span
                >
            </button>
        </li>
    </ul>
</nav>

<script>
    const isDarkTheme = () => {
        const elem = document.querySelector(".dark");
        return { elem, isDark: elem != null };
    };

    const toggleDarkTheme = () => {
        const { elem, isDark } = isDarkTheme();
        if (isDark) elem!.classList.remove("dark");
        else document.body.classList.add("dark");
        toggleThemeSwitchButton(isDark);

        return !isDark;
    };

    const themeToggleLights = document.querySelectorAll("#theme_toggle_light")!;
    const themeToggleDarks = document.querySelectorAll("#theme_toggle_dark")!;

    const toggleThemeSwitchButton = (isDark: boolean) => {
        if (isDark) {
            themeToggleDarks.forEach((dark) => dark.classList.remove("hidden"));
            themeToggleLights.forEach((dark) => dark.classList.add("hidden"));
        } else {
            themeToggleLights.forEach((dark) =>
                dark.classList.remove("hidden"),
            );
            themeToggleDarks.forEach((dark) => dark.classList.add("hidden"));
        }
    };

    const themeToggleDiv: HTMLElement =
        document.querySelector("#theme_toggle_div")!;
    themeToggleDiv.addEventListener("click", (_) => toggleDarkTheme());
    themeToggleDiv.addEventListener("mouseenter", (_) =>
        toggleThemeSwitchButton(!isDarkTheme().isDark),
    );
    themeToggleDiv.addEventListener("mouseleave", (_) =>
        toggleThemeSwitchButton(isDarkTheme().isDark),
    );
    toggleDarkTheme();
    toggleDarkTheme();
    toggleThemeSwitchButton(isDarkTheme().isDark);

    const currUrl = window.location.href;
    const navLinks = document.querySelector("#links")!.querySelectorAll("a")!;
    for (const link of navLinks) {
        const activeClass =
            "dark:text-black text-white scroll-m-20 text-lg font-bold tracking-tight".split(
                " ",
            );
        const inactiveClass =
            "dark:text-gray-400 text-gray-300 scroll-m-20 text-lg font-light tracking-tight".split(
                " ",
            );
        if (link.href === currUrl) {
            link.classList.add(...activeClass);
        } else {
            link.classList.add(...inactiveClass);
        }
    }
</script>
